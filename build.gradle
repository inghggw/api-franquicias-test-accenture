plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.giovanny'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// WebFlux para Programación Reactiva
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// R2DBC para MySQL (Conexion Reactiva a la BD)
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	runtimeOnly 'com.h2database:h2'
  runtimeOnly 'io.r2dbc:r2dbc-h2'
  runtimeOnly 'org.mariadb:r2dbc-mariadb:1.1.3'

	// Migraciones
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// Herramientas útiles
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-devtools'

	// Reactor Core para Programación Reactiva
	implementation 'io.projectreactor:reactor-core'

	// Lombok (Evita código repetitivo)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Pruebas
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootRun') {
    mustRunAfter 'build'
    dependsOn 'classes'
}
